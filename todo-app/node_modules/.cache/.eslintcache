[{"/Users/tan/Documents/GitHub/Todo-React/todo-app/src/index.js":"1","/Users/tan/Documents/GitHub/Todo-React/todo-app/src/reportWebVitals.js":"2","/Users/tan/Documents/GitHub/Todo-React/todo-app/src/App.js":"3","/Users/tan/Documents/GitHub/Todo-React/todo-app/src/components/Todo.js":"4","/Users/tan/Documents/GitHub/Todo-React/todo-app/src/components/FilterButton.js":"5","/Users/tan/Documents/GitHub/Todo-React/todo-app/src/components/Form.js":"6","/Users/tan/Documents/GitHub/Todo-React/todo-app/src/themes/main.js":"7"},{"size":401,"mtime":1633399544765,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1630599708500,"results":"10","hashOfConfig":"9"},{"size":2515,"mtime":1633399412810,"results":"11","hashOfConfig":"9"},{"size":3246,"mtime":1633398600707,"results":"12","hashOfConfig":"9"},{"size":387,"mtime":1630688002123,"results":"13","hashOfConfig":"9"},{"size":1926,"mtime":1633405357704,"results":"14","hashOfConfig":"9"},{"size":8616,"mtime":1632511613078,"results":"15","hashOfConfig":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"v37ifx",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1id68il","/Users/tan/Documents/GitHub/Todo-React/todo-app/src/index.js",["35"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from '@mui/material/styles';\n\nconst DATA = [\n\n];\n\nReactDOM.render(\n\n  <React.StrictMode>\n     <ThemeProvider >\n    <App tasks={DATA} />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","/Users/tan/Documents/GitHub/Todo-React/todo-app/src/reportWebVitals.js",[],"/Users/tan/Documents/GitHub/Todo-React/todo-app/src/App.js",["36"],"import React, { useState } from \"react\";\nimport Todo from \"./components/Todo\";\nimport FilterButton from \"./components/FilterButton\";\nimport Form from \"./components/Form\";\nimport { nanoid } from \"nanoid\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\nfunction toggleTaskCompleted(id) {\n\n    const updatedTasks = tasks.map(task => {\n      //if the task has matching id, \n      if (id === task.id) {\n        //use object spread to make a new object \n        // whoos completed prop has been inverted and\n       return {\n          ...task, completed: !task.completed\n        }\n      }\n      return task;\n    })\n    setTasks(updatedTasks)\n    \n  }\n\n  const taskList = tasks.filter(FILTER_MAP[filter])\n    .map(task => (\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask} />))\n// list of filter types\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter} />\n  ));\n\n  const tasksNoun = taskList.length > 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  function addTask(name) {\n\n    if (name.length === 0) {\n      return\n    }\n\n    const newTask = {\n      id: 'todo-' + nanoid(), name: name, completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n\n  //deletes a todo by filtering the todosId\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks)\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task, name: newName }\n      }\n      return task;\n    })\n    setTasks(editedTaskList)\n  }\n\n  return (\n\n    <div className=\"todoapp stack-large\">\n\n      {taskList.length > 0 ? (<h1>{headingText}</h1>) : (<h1>You don't have anything to do</h1>)}\n      \n      <Form addTask={addTask} />\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n      {filterList}\n    </div>\n  );\n}\nexport default App;\n","/Users/tan/Documents/GitHub/Todo-React/todo-app/src/components/Todo.js",[],"/Users/tan/Documents/GitHub/Todo-React/todo-app/src/components/FilterButton.js",[],"/Users/tan/Documents/GitHub/Todo-React/todo-app/src/components/Form.js",["37","38","39","40"],"\nimport React, { useEffect, useState } from 'react';\nimport Clock from 'react-clock';\nimport { Box } from '@mui/system';\nimport { nanoid } from \"nanoid\";\nimport 'react-clock/dist/Clock.css';\nimport { Container } from '@mui/material';\n\nfunction Form(props) {\n\n    const [name, setName] = useState('')\n\n    function handleChange(e) {\n        setName(e.target.value)\n    }\n\n    function nanTest() {\n        let a = nanoid()\n        alert(a)\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.addTask(name);\n        setName(\"\");\n    }\n\n    function randomNumber() {\n        let a = Math.ceil(Math.random() * 1000);\n        alert(`Your Lucky Number is ${a}`)\n    }\n   \n    \n    const MyClock = () => {\n      const [value, setValue] = useState(new Date());\n    \n      useEffect(() => {\n        const interval = setInterval(\n          () => setValue(new Date()),\n          1000\n        );\n    \n        return () => {\n          clearInterval(interval);\n        }\n      }, []);\n    \n      return (\n       \n  <Clock value={value}  />\n      \n      )\n    }\n    return (<>   <MyClock style={{margin:\"auto\",width:\"40%\"}}/>\n        <form onSubmit={handleSubmit} required>\n   \n            <h2 className=\"label-wrapper\">  \n         \n                <label htmlFor=\"new-todo-input\" className=\"label__lg\">What needs to be done?</label>\n            </h2>\n          \n            <input\n\n                type=\"text\"\n                id={Math.ceil(Math.random() * 1000)}\n                className=\"input input__lg\"\n                name=\"text\"\n                autoComplete=\"off\"\n                value={name}\n                onChange={handleChange}\n\n            />\n            <div class=\"button__wrap\"><button className=\"button btn btn__primary btn__lg\" \n            type=\"submit\">ADD</button>\n    <div class=\"button__shadow\"></div>\n</div>\n          \n            \n\n        </form>\n        </>\n    )\n}\n\nexport default Form;","/Users/tan/Documents/GitHub/Todo-React/todo-app/src/themes/main.js",[],["41","42"],{"ruleId":"43","severity":1,"message":"44","line":5,"column":8,"nodeType":"45","messageId":"46","endLine":5,"endColumn":23},{"ruleId":"47","severity":1,"message":"48","line":93,"column":7,"nodeType":"49","endLine":97,"endColumn":8},{"ruleId":"43","severity":1,"message":"50","line":4,"column":10,"nodeType":"45","messageId":"46","endLine":4,"endColumn":13},{"ruleId":"43","severity":1,"message":"51","line":7,"column":10,"nodeType":"45","messageId":"46","endLine":7,"endColumn":19},{"ruleId":"43","severity":1,"message":"52","line":17,"column":14,"nodeType":"45","messageId":"46","endLine":17,"endColumn":21},{"ruleId":"43","severity":1,"message":"53","line":28,"column":14,"nodeType":"45","messageId":"46","endLine":28,"endColumn":26},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","'Box' is defined but never used.","'Container' is defined but never used.","'nanTest' is defined but never used.","'randomNumber' is defined but never used.","no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-global-assign","no-unsafe-negation"]