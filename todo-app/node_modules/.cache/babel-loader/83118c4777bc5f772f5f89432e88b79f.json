{"ast":null,"code":"var _jsxFileName = \"/Users/tan/Documents/GitHub/Todo-React/todo-app/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(props) {\n  _s();\n\n  const [name, setName] = useState('');\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  function nanTest() {\n    let a = nanoid();\n    alert(a);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addTask(name);\n    setName(\"\");\n  }\n\n  function randomNumber() {\n    let a = Math.ceil(Math.random() * 1000);\n    alert(a);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    required: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"label-wrapper\",\n      children: [\"  \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: randomNumber,\n        className: \"btn btn\",\n        children: \"Random number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nanTest,\n        className: \"btn btn\",\n        children: \"Random string\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-todo-input\",\n        className: \"label__lg\",\n        children: \"What needs to be done?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: Math.ceil(Math.random() * 1000),\n      className: \"input input__lg\",\n      name: \"text\",\n      autoComplete: \"off\",\n      value: name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn__primary btn__lg\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"/PAWDgWx7+Y6BmsFMUKcdrcX5eM=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/tan/Documents/GitHub/Todo-React/todo-app/src/components/Form.js"],"names":["React","useState","nanoid","Form","props","name","setName","handleChange","e","target","value","nanTest","a","alert","handleSubmit","preventDefault","addTask","randomNumber","Math","ceil","random"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAEjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASM,YAAT,CAAsBC,CAAtB,EAAyB;AACrBF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH;;AAED,WAASC,OAAT,GAAmB;AACf,QAAIC,CAAC,GAAGV,MAAM,EAAd;AACAW,IAAAA,KAAK,CAACD,CAAD,CAAL;AACH;;AAED,WAASE,YAAT,CAAsBN,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACO,cAAF;AACAX,IAAAA,KAAK,CAACY,OAAN,CAAcX,IAAd;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH;;AAED,WAASW,YAAT,GAAwB;AACpB,QAAIL,CAAC,GAAGM,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,IAA1B,CAAR;AACAP,IAAAA,KAAK,CAACD,CAAD,CAAL;AACH;;AAED,sBACI;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAA8B,IAAA,QAAQ,MAAtC;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA,oCAAgC;AAAQ,QAAA,OAAO,EAAEG,YAAjB;AAA+B,QAAA,SAAS,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhC,eACA;AAAQ,QAAA,OAAO,EAAEN,OAAjB;AAA0B,QAAA,SAAS,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEI;AAAO,QAAA,OAAO,EAAC,gBAAf;AAAgC,QAAA,SAAS,EAAC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,EAAE,EAAEO,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,IAA1B,CAHR;AAII,MAAA,SAAS,EAAC,iBAJd;AAKI,MAAA,IAAI,EAAC,MALT;AAMI,MAAA,YAAY,EAAC,KANjB;AAOI,MAAA,KAAK,EAAEf,IAPX;AAQI,MAAA,QAAQ,EAAEE;AARd;AAAA;AAAA;AAAA;AAAA,YANJ,eAiBI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,0BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GA/CQJ,I;;KAAAA,I;AAiDT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport { nanoid } from \"nanoid\";\n\nfunction Form(props) {\n\n    const [name, setName] = useState('')\n\n    function handleChange(e) {\n        setName(e.target.value)\n    }\n\n    function nanTest() {\n        let a = nanoid()\n        alert(a)\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.addTask(name);\n        setName(\"\");\n    }\n\n    function randomNumber() {\n        let a = Math.ceil(Math.random() * 1000);\n        alert(a)\n    }\n\n    return (\n        <form onSubmit={handleSubmit} required>\n            <h2 className=\"label-wrapper\">  <button onClick={randomNumber} className=\"btn btn\">Random number</button>\n            <button onClick={nanTest} className=\"btn btn\">Random string</button>\n                <label htmlFor=\"new-todo-input\" className=\"label__lg\">What needs to be done?</label>\n            </h2>\n          \n            <input\n\n                type=\"text\"\n                id={Math.ceil(Math.random() * 1000)}\n                className=\"input input__lg\"\n                name=\"text\"\n                autoComplete=\"off\"\n                value={name}\n                onChange={handleChange}\n\n            />\n            <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n                Add\n            </button>\n        </form>\n    )\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}