{"ast":null,"code":"var _jsxFileName = \"/Users/tan/Documents/GitHub/Todo-React/todo-app/src/components/Form.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Clock from 'react-clock';\nimport { Box } from '@mui/system';\nimport { nanoid } from \"nanoid\";\nimport 'react-clock/dist/Clock.css';\nimport { Container } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Form(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [name, setName] = useState('');\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  function nanTest() {\n    let a = nanoid();\n    alert(a);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addTask(name);\n    setName(\"\");\n  }\n\n  function randomNumber() {\n    let a = Math.ceil(Math.random() * 1000);\n    alert(`Your Lucky Number is ${a}`);\n  }\n\n  const MyClock = () => {\n    _s();\n\n    const [value, setValue] = useState(new Date());\n    useEffect(() => {\n      const interval = setInterval(() => setValue(new Date()), 1000);\n      return () => {\n        clearInterval(interval);\n      };\n    }, []);\n    return /*#__PURE__*/_jsxDEV(Clock, {\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }, this);\n  };\n\n  _s(MyClock, \"H1BX8o8YjT8zfL/MJZc9xOZY6E4=\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"   \", /*#__PURE__*/_jsxDEV(MyClock, {\n      style: {\n        margin: \"auto\",\n        width: \"40%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"label-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"new-todo-input\",\n          className: \"label__lg\",\n          children: \"What needs to be done?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: Math.ceil(Math.random() * 1000),\n        className: \"input input__lg\",\n        name: \"text\",\n        autoComplete: \"off\",\n        value: name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"button__wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button btn btn__primary btn__lg\",\n          type: \"submit\",\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"button__shadow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(Form, \"/PAWDgWx7+Y6BmsFMUKcdrcX5eM=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/tan/Documents/GitHub/Todo-React/todo-app/src/components/Form.js"],"names":["React","useEffect","useState","Clock","Box","nanoid","Container","Form","props","name","setName","handleChange","e","target","value","nanTest","a","alert","handleSubmit","preventDefault","addTask","randomNumber","Math","ceil","random","MyClock","setValue","Date","interval","setInterval","clearInterval","margin","width"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport Clock from 'react-clock';\nimport { Box } from '@mui/system';\nimport { nanoid } from \"nanoid\";\nimport 'react-clock/dist/Clock.css';\nimport { Container } from '@mui/material';\n\nfunction Form(props) {\n\n    const [name, setName] = useState('')\n\n    function handleChange(e) {\n        setName(e.target.value)\n    }\n\n    function nanTest() {\n        let a = nanoid()\n        alert(a)\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.addTask(name);\n        setName(\"\");\n    }\n\n    function randomNumber() {\n        let a = Math.ceil(Math.random() * 1000);\n        alert(`Your Lucky Number is ${a}`)\n    }\n   \n    \n    const MyClock = () => {\n      const [value, setValue] = useState(new Date());\n    \n      useEffect(() => {\n        const interval = setInterval(\n          () => setValue(new Date()),\n          1000\n        );\n    \n        return () => {\n          clearInterval(interval);\n        }\n      }, []);\n    \n      return (\n       \n  <Clock value={value}  />\n      \n      )\n    }\n    return (<>   <MyClock style={{margin:\"auto\",width:\"40%\"}}/>\n        <form onSubmit={handleSubmit} required>\n   \n            <h2 className=\"label-wrapper\">  \n         \n                <label htmlFor=\"new-todo-input\" className=\"label__lg\">What needs to be done?</label>\n            </h2>\n          \n            <input\n\n                type=\"text\"\n                id={Math.ceil(Math.random() * 1000)}\n                className=\"input input__lg\"\n                name=\"text\"\n                autoComplete=\"off\"\n                value={name}\n                onChange={handleChange}\n\n            />\n            <div class=\"button__wrap\"><button className=\"button btn btn__primary btn__lg\" \n            type=\"submit\">ADD</button>\n    <div class=\"button__shadow\"></div>\n</div>\n          \n            \n\n        </form>\n        </>\n    )\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}