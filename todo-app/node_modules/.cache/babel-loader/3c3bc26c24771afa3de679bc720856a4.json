{"ast":null,"code":"var _jsxFileName = \"/Users/tan/Documents/GitHub/Todo-React/todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Todo from \"./components/Todo\";\nimport FilterButton from \"./components/FilterButton\";\nimport Form from \"./components/Form\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nfunction App(props) {\n  _s();\n\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      //if the task has matching id, \n      if (id === task.id) {\n        //use object spread to make a new object \n        // whoos completed prop has been inverted and\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updatedTasks);\n    console.log(tasks[0]);\n  }\n\n  const taskList = tasks.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    editTask: editTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this));\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  function addTask(name) {\n    if (name.length === 0) {\n      return;\n    }\n\n    const newTask = {\n      id: 'todo-' + nanoid(),\n      name: name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n\n  function deleteTask(id) {\n    console.log(id);\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task,\n          name: newName\n        };\n      }\n\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp stack-large\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: headingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"list\",\n      className: \"todo-list stack-large stack-exception\",\n      \"aria-labelledby\": \"list-heading\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"EeRnFHbkPD5i3v9CpmwzSMi80Ig=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tan/Documents/GitHub/Todo-React/todo-app/src/App.js"],"names":["React","useState","Todo","FilterButton","Form","nanoid","FILTER_MAP","All","Active","task","completed","Completed","App","props","tasks","setTasks","filter","setFilter","toggleTaskCompleted","id","updatedTasks","map","console","log","taskList","name","deleteTask","editTask","tasksNoun","length","headingText","addTask","newTask","remainingTasks","newName","editedTaskList"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Todo from \"./components/Todo\";\nimport FilterButton from \"./components/FilterButton\";\nimport Form from \"./components/Form\";\nimport { nanoid } from \"nanoid\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n\n  function toggleTaskCompleted(id) {\n\n    const updatedTasks = tasks.map(task => {\n      //if the task has matching id, \n      if (id === task.id) {\n        //use object spread to make a new object \n        // whoos completed prop has been inverted and\n\n        return {\n          ...task, completed: !task.completed\n        }\n      }\n      return task;\n    })\n    setTasks(updatedTasks)\n    console.log(tasks[0])\n  }\n\n\n  const taskList = tasks.map(task => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask} />))\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  function addTask(name) {\n\n    if (name.length === 0) {\n      return\n    }\n\n    const newTask = {\n      id: 'todo-' + nanoid(), name: name, completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n\n  function deleteTask(id) {\n    console.log(id)\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks)\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task, name: newName }\n      }\n      return task;\n    })\n    setTasks(editedTaskList)\n  }\n\n\n\n\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>{headingText}</h1>\n      <Form addTask={addTask} />\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n\n      </ul>\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}