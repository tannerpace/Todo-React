{"ast":null,"code":"var _jsxFileName = \"/Users/tan/Documents/GitHub/Todo-React/todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Todo from \"./components/Todo\";\nimport FilterButton from \"./components/FilterButton\";\nimport Form from \"./components/Form\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [tasks, setTasks] = useState(props.tasks);\n  const taskList = tasks.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 38\n  }, this));\n\n  function addTask(name) {\n    if (name.length === 0) {\n      return;\n    }\n\n    const newTask = {\n      id: 'todo-' + nanoid(),\n      name: name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp stack-large\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Don't forget to....\", headingText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"list\",\n      className: \"todo-list stack-large stack-exception\",\n      \"aria-labelledby\": \"list-heading\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pjFsLTHS1Kjd+NDyC2kZTexpLic=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tan/Documents/GitHub/Todo-React/todo-app/src/App.js"],"names":["React","useState","Todo","FilterButton","Form","nanoid","App","props","tasks","setTasks","taskList","map","task","id","name","completed","addTask","length","newTask","headingText","tasksNoun"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACM,KAAK,CAACC,KAAP,CAAlC;AAEA,QAAME,QAAQ,GAAGF,KAAK,CAACG,GAAN,CAAUC,IAAI,iBAAI,QAAC,IAAD;AAAM,IAAA,EAAE,EAAEA,IAAI,CAACC,EAAf;AAAmB,IAAA,IAAI,EAAED,IAAI,CAACE,IAA9B;AAAoC,IAAA,SAAS,EAAEF,IAAI,CAACG;AAApD,KAAoEH,IAAI,CAACC,EAAzE;AAAA;AAAA;AAAA;AAAA,UAAlB,CAAjB;;AAEA,WAASG,OAAT,CAAiBF,IAAjB,EAAuB;AAErB,QAAIA,IAAI,CAACG,MAAL,KAAgB,CAApB,EAAuB;AACrB;AACD;;AAED,UAAMC,OAAO,GAAG;AACdL,MAAAA,EAAE,EAAE,UAAUR,MAAM,EADN;AACUS,MAAAA,IAAI,EAAEA,IADhB;AACsBC,MAAAA,SAAS,EAAE;AADjC,KAAhB;AAGAN,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWU,OAAX,CAAD,CAAR;AACD;;AAED,QAAMC,WAAW,GAAI,GAAET,QAAQ,CAACO,MAAO,IAAGG,SAAU,YAApD;AACA,QAAMA,SAAS,GAAGV,QAAQ,CAACO,MAAT,KAAoB,CAApB,GAAwB,OAAxB,GAAkC,MAApD;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACE;AAAA,wCAAwBE,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAEH;AAAf;AAAA;AAAA;AAAA;AAAA,YAFF,eASE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,uCAFZ;AAGE,yBAAgB,cAHlB;AAAA,gBAKGN;AALH;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA3CQJ,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Todo from \"./components/Todo\";\nimport FilterButton from \"./components/FilterButton\";\nimport Form from \"./components/Form\";\nimport { nanoid } from \"nanoid\";\n\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n\n  const taskList = tasks.map(task => <Todo id={task.id} name={task.name} completed={task.completed} key={task.id} />)\n\n  function addTask(name) {\n\n    if (name.length === 0) {\n      return\n    }\n\n    const newTask = {\n      id: 'todo-' + nanoid(), name: name, completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n\n\n\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>Don't forget to....{headingText}</h1>\n      <Form addTask={addTask} />\n\n\n\n\n\n\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n\n      </ul>\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}