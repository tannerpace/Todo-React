{"ast":null,"code":"import _slicedToArray from\"/Users/tan/Documents/GitHub/Todo-React/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from'react';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function usePrevious(value){var ref=useRef();useEffect(function(){ref.current=value;});return ref.current;}export default function Todo(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEditing=_useState2[0],setEditing=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newName=_useState4[0],setNewName=_useState4[1];var wasEditing=usePrevious(isEditing);var editFeildRef=useRef(null);var editButtonRef=useRef(null);function handleChange(e){setNewName(e.target.value);}function handleSubmit(e){e.preventDefault();props.editTask(props.id,newName);setNewName('');setEditing(false);}var editingTemplate=/*#__PURE__*/_jsxs(\"form\",{className:\"stack-small\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"todo-label\",htmlFor:props.id,children:[\"Hi enter a new name for \",props.name]}),/*#__PURE__*/_jsx(\"input\",{id:props.id,className:\"todo-text\",type:\"text\",value:newName,onChange:handleChange,ref:editFeildRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-group\",children:[/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn todo-cancel\",onClick:function onClick(){return setEditing(false);},children:[\"Cancel\",/*#__PURE__*/_jsxs(\"span\",{className:\"visually-hidden\",children:[\"renaming \",props.name]})]}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",className:\"btn btn__primary todo-edit\",children:[\"Save\",/*#__PURE__*/_jsxs(\"span\",{className:\"visually-hidden\",children:[\"new name for \",props.name]})]})]})]});var viewTemplate=/*#__PURE__*/_jsxs(\"div\",{className:\"stack-small\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"c-cb\",children:[/*#__PURE__*/_jsx(\"input\",{id:props.id,type:\"checkbox\",defaultChecked:props.completed,onChange:function onChange(){return props.toggleTaskCompleted(props.id);}}),/*#__PURE__*/_jsx(\"label\",{className:\"todo-label\",htmlFor:props.id,children:props.name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-group\",children:[/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn\",onClick:function onClick(){return setEditing(true);},ref:editButtonRef,children:[\"Edit \",/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:props.name})]}),/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn btn__danger\",onClick:function onClick(){return props.deleteTask(props.id);},children:[\"Delete \",/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:props.name})]})]})]});useEffect(function(){if(!wasEditing&&isEditing){editFeildRef.current.focus();}else{editButtonRef.current.focus();}},[isEditing]);return/*#__PURE__*/_jsx(\"li\",{className:\"todo \",children:isEditing?editingTemplate:viewTemplate});}","map":{"version":3,"sources":["/Users/tan/Documents/GitHub/Todo-React/todo-app/src/components/Todo.js"],"names":["React","useState","useRef","useEffect","usePrevious","value","ref","current","Todo","props","isEditing","setEditing","newName","setNewName","wasEditing","editFeildRef","editButtonRef","handleChange","e","target","handleSubmit","preventDefault","editTask","id","editingTemplate","name","viewTemplate","completed","toggleTaskCompleted","deleteTask","focus"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nfunction usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current\n}\n\n\n\nexport default function Todo(props) {\n    const [isEditing, setEditing] = useState(false)\n    const [newName, setNewName] = useState('');\n    const wasEditing = usePrevious(isEditing);\n\n    const editFeildRef = useRef(null);\n    const editButtonRef = useRef(null);\n\n    function handleChange(e) {\n        setNewName(e.target.value)\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        props.editTask(props.id, newName);\n        setNewName('');\n        setEditing(false);\n    }\n\n    const editingTemplate = (\n        <form className=\"stack-small\" onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <label className=\"todo-label\" htmlFor={props.id}>\n                    Hi enter a new name for {props.name}\n                </label>\n                <input id={props.id}\n                    className=\"todo-text\"\n                    type=\"text\"\n                    value={newName}\n                    onChange={handleChange}\n                    ref={editFeildRef} />\n            </div>\n            <div className=\"btn-group\">\n                <button type=\"button\" className=\"btn todo-cancel\" onClick={() => setEditing(false)}>\n                    Cancel\n                    <span className=\"visually-hidden\">renaming {props.name}</span>\n                </button>\n                <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n                    Save\n                    <span className=\"visually-hidden\">new name for {props.name}</span>\n                </button>\n            </div>\n        </form>\n    );\n    const viewTemplate = (\n        <div className=\"stack-small\">\n            <div className=\"c-cb\">\n                <input\n                    id={props.id}\n                    type=\"checkbox\"\n                    defaultChecked={props.completed}\n                    onChange={() => props.toggleTaskCompleted(props.id)}\n                />\n                <label className=\"todo-label\" htmlFor={props.id}>\n                    {props.name}\n                </label>\n            </div>\n            <div className=\"btn-group\">\n                <button type=\"button\"\n                    className=\"btn\"\n                    onClick={() => setEditing(true)}\n                    ref={editButtonRef}\n                >\n                    Edit <span className=\"visually-hidden\">{props.name}</span>\n                </button>\n                <button\n                    type=\"button\"\n                    className=\"btn btn__danger\"\n                    onClick={() => props.deleteTask(props.id)}\n                >\n                    Delete <span className=\"visually-hidden\">{props.name}</span>\n                </button>\n            </div>\n        </div>\n    );\n    useEffect(() => {\n\n        if (!wasEditing && isEditing) {\n            editFeildRef.current.focus()\n        } else {\n            editButtonRef.current.focus()\n        }\n    }, [isEditing])\n\n    return (\n        <li className=\"todo \">\n            {isEditing ? editingTemplate : viewTemplate}\n\n        </li>\n    );\n}"]},"metadata":{},"sourceType":"module"}