{"ast":null,"code":"import _toConsumableArray from\"/Users/tan/Documents/GitHub/Todo-React/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/tan/Documents/GitHub/Todo-React/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/tan/Documents/GitHub/Todo-React/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Todo from\"./components/Todo\";import FilterButton from\"./components/FilterButton\";import Form from\"./components/Form\";import{nanoid}from\"nanoid\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FILTER_MAP={All:function All(){return true;},Active:function Active(task){return!task.completed;},Completed:function Completed(task){return task.completed;}};var FILTER_NAMES=Object.keys(FILTER_MAP);function App(props){var _useState=useState(props.tasks),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var _useState3=useState('All'),_useState4=_slicedToArray(_useState3,2),filter=_useState4[0],setFilter=_useState4[1];function toggleTaskCompleted(id){var updatedTasks=tasks.map(function(task){//if the task has matching id, \nif(id===task.id){//use object spread to make a new object \n// whoos completed prop has been inverted and\nreturn _objectSpread(_objectSpread({},task),{},{completed:!task.completed});}return task;});setTasks(updatedTasks);}var taskList=tasks.filter(FILTER_MAP[filter]).map(function(task){return/*#__PURE__*/_jsx(Todo,{id:task.id,name:task.name,completed:task.completed,toggleTaskCompleted:toggleTaskCompleted,deleteTask:deleteTask,editTask:editTask},task.id);});// list of filter types\nvar filterList=FILTER_NAMES.map(function(name){return/*#__PURE__*/_jsx(FilterButton,{name:name,isPressed:name===filter,setFilter:setFilter},name);});var tasksNoun=taskList.length>1?'tasks':'task';var headingText=\"\".concat(taskList.length,\" \").concat(tasksNoun,\" remaining\");function addTask(name){if(name.length===0){return;}var newTask={id:'todo-'+nanoid(),name:name,completed:false};setTasks([].concat(_toConsumableArray(tasks),[newTask]));}//deletes a todo by filtering the todosId\nfunction deleteTask(id){var remainingTasks=tasks.filter(function(task){return id!==task.id;});setTasks(remainingTasks);}function editTask(id,newName){var editedTaskList=tasks.map(function(task){if(id===task.id){return _objectSpread(_objectSpread({},task),{},{name:newName});}return task;});setTasks(editedTaskList);}return/*#__PURE__*/_jsxs(\"div\",{className:\"todoapp stack-large\",children:[taskList.length>0?/*#__PURE__*/_jsx(\"h1\",{children:headingText}):/*#__PURE__*/_jsx(\"h1\",{children:\"You don't have anything to do\"}),/*#__PURE__*/_jsx(Form,{addTask:addTask}),/*#__PURE__*/_jsx(\"ul\",{role:\"list\",className:\"todo-list stack-large stack-exception\",\"aria-labelledby\":\"list-heading\",children:taskList}),filterList]});}export default App;","map":{"version":3,"sources":["/Users/tan/Documents/GitHub/Todo-React/todo-app/src/App.js"],"names":["React","useState","Todo","FilterButton","Form","nanoid","FILTER_MAP","All","Active","task","completed","Completed","FILTER_NAMES","Object","keys","App","props","tasks","setTasks","filter","setFilter","toggleTaskCompleted","id","updatedTasks","map","taskList","name","deleteTask","editTask","filterList","tasksNoun","length","headingText","addTask","newTask","remainingTasks","newName","editedTaskList"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Todo from \"./components/Todo\";\nimport FilterButton from \"./components/FilterButton\";\nimport Form from \"./components/Form\";\nimport { nanoid } from \"nanoid\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\nfunction toggleTaskCompleted(id) {\n\n    const updatedTasks = tasks.map(task => {\n      //if the task has matching id, \n      if (id === task.id) {\n        //use object spread to make a new object \n        // whoos completed prop has been inverted and\n       return {\n          ...task, completed: !task.completed\n        }\n      }\n      return task;\n    })\n    setTasks(updatedTasks)\n    \n  }\n\n  const taskList = tasks.filter(FILTER_MAP[filter])\n    .map(task => (\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask} />))\n// list of filter types\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter} />\n  ));\n\n  const tasksNoun = taskList.length > 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  function addTask(name) {\n\n    if (name.length === 0) {\n      return\n    }\n\n    const newTask = {\n      id: 'todo-' + nanoid(), name: name, completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n\n  //deletes a todo by filtering the todosId\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks)\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task, name: newName }\n      }\n      return task;\n    })\n    setTasks(editedTaskList)\n  }\n\n  return (\n\n    <div className=\"todoapp stack-large\">\n\n      {taskList.length > 0 ? (<h1>{headingText}</h1>) : (<h1>You don't have anything to do</h1>)}\n      \n      <Form addTask={addTask} />\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n      {filterList}\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}